<!doctype html>
<meta charset="utf8">
<link rel="stylesheet" href="./spec.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="./spec.js"></script>
<pre class="metadata">
title: Enhanced Try Syntax
stage: 0
contributors: Mohsen Azimi
</pre>

<emu-clause id="sec-enhanced-try-syntax">
  <h1>Enhanced Try Syntax</h1>
  <p>The Enhanced Try Syntax extends the existing try statement to allow for more flexible error handling patterns.</p>

  <emu-clause id="sec-try-statement">
    <h1>The try Statement</h1>
    <p>The enhanced try statement allows for try blocks without catch or finally clauses, and try expressions.</p>
    <emu-grammar>
      TryStatement[Yield, Await, Return] :
        `try` BlockStatement[?Yield, ?Await, ?Return]
        `try` BlockStatement[?Yield, ?Await, ?Return] Catch[?Yield, ?Await, ?Return]
        `try` BlockStatement[?Yield, ?Await, ?Return] Finally[?Yield, ?Await, ?Return]
        `try` BlockStatement[?Yield, ?Await, ?Return] Catch[?Yield, ?Await, ?Return] Finally[?Yield, ?Await, ?Return]
        `try` Expression[+In, ?Yield, ?Await]
    </emu-grammar>
  </emu-clause>

  <emu-clause id="sec-try-evaluation" type="abstract operation">
    <h1>TryEvaluation ( _tryBlock_, _catchClause_, _finallyBlock_ )</h1>
    <dl class="header">
      <dt>description</dt>
      <dd>Evaluates a try statement or expression</dd>
    </dl>
    <emu-alg>
      1. Let _result_ be Completion(Evaluation of _tryBlock_).
      1. If _result_ is an abrupt completion and _catchClause_ is not *undefined*, then
        1. Set _result_ to Completion(CatchClauseEvaluation of _catchClause_ with argument _result_.[[Value]]).
      1. If _finallyBlock_ is not *undefined*, then
        1. Let _F_ be Completion(FinallyEvaluation of _finallyBlock_).
        1. If _F_ is an abrupt completion, return _F_.
      1. If _result_ is an abrupt completion, return _result_.
      1. Return NormalCompletion(_result_.[[Value]]).
    </emu-alg>
  </emu-clause>

  <emu-clause id="sec-try-expression-evaluation" type="abstract operation">
    <h1>TryExpressionEvaluation ( _expression_ )</h1>
    <dl class="header">
      <dt>description</dt>
      <dd>Evaluates a try expression</dd>
    </dl>
    <emu-alg>
      1. Let _result_ be Completion(Evaluation of _expression_).
      1. If _result_ is an abrupt completion, return NormalCompletion(*undefined*).
      1. Return NormalCompletion(_result_.[[Value]]).
    </emu-alg>
  </emu-clause>
</emu-clause>